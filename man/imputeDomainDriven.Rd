% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/avgImpute.R
\name{imputeDomainDriven}
\alias{imputeDomainDriven}
\title{Imputing data using information from other sources, and domain knowledge}
\usage{
imputeDomainDriven(
  dataFill,
  dataGet,
  expr,
  lookupIndexNames = NULL,
  useIndexIgnoreSimilarity = FALSE,
  checkExprForErrors = TRUE,
  assignOp = c("<-", "="),
  errorOutputFile = NULL,
  distFunc = stats::dist,
  similarityCols,
  maxDist = NULL,
  minObs = NULL,
  maxObs = NULL,
  warnIfToofewObs = FALSE,
  shareOfToofewObs = 0.5,
  distToWeightFunc = distToWeight,
  createLookupFunc = createLookupWithMeanMethod,
  warnScaling = FALSE,
  showProgressBar = nCores == 1,
  nCores = 1,
  ...
)
}
\arguments{
\item{dataFill}{The data.frame that should be filled with addtional information, i.e. the data.frame inside of which \code{expr} should be evaluated.}

\item{dataGet}{The data.frame from which additional information should be drawn if colums are referenced within the function named \code{lookupFuncName}.}

\item{expr}{The expression that should be evaluated inside \code{dataFill}. This must be quoted, and not be an actual expression.}

\item{lookupIndexNames}{For each row, the lookup function will search for the most similar observations in \code{dataGet}. However, you may want to restrict the
lookup to certain criteria, e.g. that similar observations must be placed in the same region. In that case, you can specify the colnames for the must have criteria.\cr
If NULL (default value), then all observations in dataGet are eglible for matching.}

\item{checkExprForErrors}{Logical value indicating if the expression should be checked for errors, e.g. for circular references.}

\item{assignOp}{The assignment operator which assigns the values of the right hand side (RHS) to the left hand side (LHS). A character vector of any length, e.g. c("<-", "=")}

\item{errorOutputFile}{Optional: If \code{checkExprForErrors = TRUE}, then an output file can be specified, into which the lines that contain circular references will be written.}

\item{distFunc}{The distance function to be applied to find the most similar observations. See function \code{\link{getNearestObs}} or, e.g., \code{\link[stats:dist]{stats::dist}} for more details.}

\item{similarityCols}{The columns in \code{dataFill} and \code{dataGet} which will be used to find the most similar observations in \code{dataGet} for each observation in \code{dataFill}.}

\item{maxDist}{Optional: The maximum distance between observations. See also \code{\link{getNearestObs}}.}

\item{minObs}{Optional: The minimum number of observations that should be drawn in \code{dataGet} for each observation in \code{data}. See also \code{\link{getNearestObs}}.}

\item{maxObs}{Optional: The maximum number of observations that should be drawn in \code{dataGet} for each observation in \code{data}. See also \code{\link{getNearestObs}}.}

\item{warnIfToofewObs}{Logical value indicating if a warning should be given in case there are not enough observations available to satisfy the number given in \code{minObs}.}

\item{shareOfToofewObs}{The share of observations that should be taken from the remaining observations, in case the number given in \code{minObs} cannot be satisfied.}

\item{distToWeightFunc}{The function to convert distances into weights. These weights are then used to calculate a weighted average of all similar observations, which is subsequently used for the imputation. See also \code{\link{distToWeight}}.
Could be e.g. the inverse value of the distance, or simply 1 for every similar observation.\cr
The function must take a distance matrix and return a weight matrix with equal dimensions.}

\item{createLookupFunc}{The function to create the lookup function. See \code{\link{createLookupWithMeanMethod}} for an example.}

\item{warnScaling}{Logical value indicating if a warning should be issued when the variables are on very different scale.
You can change the distance metric, e.g. to \code{'manhattan'} by setting \code{distFunc = function (x) \link[stats:dist]{stats::dist}(x, method='manhattan')}.
Or you could use the inverse of the cosine similarity as distance: \code{distFunc = function (x) 1/\link[coop:cosine]{coop::cosine}(t(x))}.}

\item{showProgressBar}{Logical value indicating if a progress bar should be shown during the calculations.}

\item{nCores}{The number of cores that should be used for the calculations.}

\item{...}{Further arguments passed either into \code{distToWeightFunc} or into \code{createLookupFunc}.}
}
\value{
A data.frame containing the same observations as given in \code{dataFill}, but with additional columns as defined in \code{expr}.
}
\description{
Fills lacking data in \code{dataFill} using information from \code{dataGet} and calculation rules contained in \code{expr}.
}
\details{
For performance reasons it is not possible to name the lookup function other than 'lookup'. For an example on how to use the lookup function, see the examples below.\cr
If the lookup function is not used inside \code{expr}, then there is no need to include information from \code{dataGet} and thus the computationally intensive procedure of finding the most similar observations will be skipped.\cr
If a figure is already available in \code{dataFill} and it will be newly created while evaluation \code{expr}, then an error is thrown.\cr
If, for some values in the lookup index, the number of observations in \code{dataGet} is smaller than \code{minObs}, then the maximum amount of available observations is taken from \code{dataGet}, but reduced by the factor 0.5.
}
\examples{
dataFill <- data.frame(a=1:10, b=11:20, sim1=51:60, ind1=c(1,1,1,2,2,2,3,3,3,3))
dataGet <- data.frame(a=21:30, c=31:40, sim1=60:51, ind1=c(3,3,3,3,2,2,2,1,1,1))
expr <- quote({
  e <- a * b
  c <- a * lookup(a + c)
})
imputeDomainDriven(dataFill = dataFill,
                   dataGet = dataGet,
                   lookupIndexNames = 'ind1',
                   similarityCols = 'sim1',
                   minObs = 2,
                   expr = expr)
}
\author{
Daniel Hoop
}
